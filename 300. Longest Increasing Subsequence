class Solution {
    static int[][] dp;

    public static int lis(int idx, int prev, int[] nums) {
        if (idx == nums.length) {
            return 0;
        }
        if (dp[idx][prev + 1] != -1) {
            return dp[idx][prev + 1];
        }
        int notTake = 0 + lis(idx + 1, prev, nums);
        int take = 0;
        if (prev == -1 || nums[idx] > nums[prev]) {
            take = 1 + lis(idx + 1, idx, nums);
        }
        return dp[idx][prev + 1] = Math.max(take, notTake);
    }

    public int lengthOfLIS(int[] nums) {
        dp = new int[nums.length][nums.length + 1];
        for (int i = 0; i < nums.length; i++) {
            Arrays.fill(dp[i], -1);
        }
        return lis(0, -1, nums);
    }
}
