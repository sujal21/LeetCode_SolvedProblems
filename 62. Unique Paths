class Solution {
    // public static int memo(int si,int sj,int ei,int ej,HashMap<String,Integer> map){
    //     if(si==ei && sj==ej){
    //         return 1;
    //     }

    //     if(si>ei || sj>ej){
    //         return 0;
    //     }
    //     String key=si+","+sj;
    //     if(map.containsKey(key)){
    //         return map.get(key);
    //     }

    //     int op1=memo(si+1,sj,ei,ej,map);
    //     int op2=memo(si,sj+1,ei,ej,map);

    //     map.put(key,op1+op2);
    //     return op1+op2;
    // }
    public int uniquePaths(int m, int n) {
        // HashMap<String,Integer> map=new HashMap<>();
        // int ans=memo(0,0,m-1,n-1,map);
        // return ans;

        int[][] dp=new int[m][n];
        for(int i=0;i<m;i++){
            dp[i][n-1]=1;
        }
        for(int i=0;i<n;i++){
            dp[m-1][i]=1;
        }

        for(int i=m-2;i>=0;i--){
            for(int j=n-2;j>=0;j--){
                dp[i][j]=dp[i+1][j]+dp[i][j+1];
            }
        }

        return dp[0][0];
    }
}
