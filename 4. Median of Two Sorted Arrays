class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n=nums1.length+nums2.length;
        int i=0;
        int j=0;
        int count=0;
        int idx1=n/2-1;
        int idx2=n/2;
        int ele1=-1;
        int ele2=-1;

        while(i<nums1.length && j<nums2.length){
            if(nums1[i]<nums2[j]){
                if(count==idx1){
                    ele1=nums1[i];
                }
                if(count==idx2){
                    ele2=nums1[i];
                }
                count++;
                i++;
            }else{
                if(count==idx1){
                    ele1=nums2[j];
                }
                if(count==idx2){
                    ele2=nums2[j];
                }
                count++;
                j++;
            }
        }

        while(i<nums1.length){
            if(count==idx1){
                ele1=nums1[i];
            }
            if(count==idx2){
                ele2=nums1[i];
            }
            count++;
            i++;
        }

        while(j<nums2.length){
            if(count==idx1){
                ele1=nums2[j];
            }
            if(count==idx2){
                ele2=nums2[j];
            }
            count++;
            j++;
        }

        if(n%2==1){
            return (double)ele2;
        }else{
            return (double)(ele1+ele2)/2.0;
        }
    }
}
