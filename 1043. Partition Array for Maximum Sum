class Solution {
    public int solve(int[] arr,int k,int[] dp,int idx){
        if(idx==arr.length){
            return 0;
        }
        if(dp[idx]!=-1){
            return dp[idx];
        }
        int ans=Integer.MIN_VALUE;
        int len=0;
        int maxi=Integer.MIN_VALUE;
        for(int i=idx;i<Math.min(arr.length,idx+k);i++){
            len++;
            maxi=Math.max(maxi,arr[i]);
            int sum=(len*maxi)+solve(arr,k,dp,i+1);
            ans=Math.max(ans,sum);
        }
        return dp[idx]=ans;
    }
    public int maxSumAfterPartitioning(int[] arr, int k) {
        int[] dp=new int[arr.length];
        Arrays.fill(dp,-1);
        return solve(arr,k,dp,0);
    }
}

