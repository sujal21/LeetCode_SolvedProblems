/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public static TreeNode tree(int[] arr,int s,int e){
        if(s>=e){
            return null;
        }
        int val=arr[s];
        TreeNode root=new TreeNode(val);
        int i=s+1;
        while(i<arr.length && arr[i]<val){
            i++;
        }
        root.left=tree(arr,s+1,i);
        root.right=tree(arr,i,e);
        return root;
    }
    public TreeNode bstFromPreorder(int[] preorder) {
        return tree(preorder,0,preorder.length);
    }
}
