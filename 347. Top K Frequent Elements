class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        List<Integer> result = new ArrayList<>();
        HashMap<Integer, Integer> map = new HashMap<>();

        // Count frequency of each number
        for (int i : nums) {
            map.put(i, map.getOrDefault(i, 0) + 1);
        }

        // Use a PriorityQueue to sort by frequency
        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> map.get(b) - map.get(a));

        pq.addAll(map.keySet());

        // Retrieve top k frequent elements
        for (int i = 0; i < k; i++) {
            result.add(pq.poll());
        }

        // Convert result list to array
        int[] ans = new int[k];
        for (int i = 0; i < k; i++) {
            ans[i] = result.get(i);
        }

        return ans;
    }
}
